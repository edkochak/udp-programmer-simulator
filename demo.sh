#!/bin/bash

# Скрипт для запуска полной демонстрации системы программистов
# Автор: Студент группы
# Задача: UDP клиент-сервер система для моделирования работы программистов

echo "============================================="
echo "  СИСТЕМА МОДЕЛИРОВАНИЯ РАБОТЫ ПРОГРАММИСТОВ"
echo "============================================="
echo "Реализация на 10 баллов с поддержкой:"
echo "- UDP протокол обмена"
echo "- Динамическое подключение/отключение клиентов"
echo "- Множественные наблюдатели"
echo "- Корректное завершение при остановке сервера"
echo "============================================="
echo

# Проверяем, собран ли проект
if [ ! -f "build/server" ] || [ ! -f "build/programmer" ] || [ ! -f "build/observer" ]; then
    echo "Сборка проекта..."
    make all
    if [ $? -ne 0 ]; then
        echo "Ошибка сборки проекта!"
        exit 1
    fi
    echo "Проект успешно собран."
    echo
fi

# Функция для очистки фоновых процессов
cleanup() {
    echo
    echo "Завершение всех процессов..."
    pkill -f "build/server"
    pkill -f "build/programmer"
    pkill -f "build/observer"
    wait
    echo "Демонстрация завершена."
    exit 0
}

# Устанавливаем обработчик сигналов
trap cleanup SIGINT SIGTERM

echo "1. Запуск сервера на порту 8080..."
./build/server 127.0.0.1 8080 &
SERVER_PID=$!
sleep 2

echo "2. Запуск программистов..."
./build/programmer "Иван_Иванов" 127.0.0.1 8080 8081 &
PROG1_PID=$!
sleep 1

./build/programmer "Петр_Петров" 127.0.0.1 8080 8082 &
PROG2_PID=$!
sleep 1

./build/programmer "Мария_Сидорова" 127.0.0.1 8080 8083 &
PROG3_PID=$!
sleep 2

echo "3. Система работает. Через 5 секунд запустится наблюдатель..."
echo "   Вы можете наблюдать за логами программистов и сервера."
echo "   Для тестирования отключения/подключения используйте Ctrl+Z и команду 'fg'"
sleep 5

echo "4. Запуск первого наблюдателя..."
echo "   В окне наблюдателя используйте команды:"
echo "   - Enter: обновить статус"
echo "   - r: принудительное обновление"
echo "   - h: помощь"
echo "   - q: выход из наблюдателя"
echo

# Запускаем наблюдателя в интерактивном режиме
./build/observer 127.0.0.1 8080 8090

# После выхода из наблюдателя очищаем процессы
cleanup
